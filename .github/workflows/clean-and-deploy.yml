
name: Clean and Deploy to Stage

on:
  repository_dispatch:
    types: [deploy-to-stage]

jobs:
  clean-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout source repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Make scripts executable
      run: chmod +x .github/scripts/*.sh
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm cache clean --force
        rm -f package-lock.json
        npm install
        
    - name: Run Lovable reference cleanup
      run: node scripts/clean-lovable-references.js
      
    - name: Configure Git
      run: |
        git config --global user.name 'Stage Deploy Bot'
        git config --global user.email 'stage-deploy@dave-ops.net'
        
    - name: Prepare cleaned source
      run: .github/scripts/prepare-cleaned-source.sh
      
    - name: Validate production workflow
      run: .github/scripts/validate-workflow.sh
      
    - name: Deploy to stage repository
      env:
        PORTFOLIO_TOKEN: ${{ secrets.PORTFOLIO_TOKEN }}
        TARGET_REPO: ${{ github.event.client_payload.target_repo }}
        PROJECT_NAME: ${{ github.event.client_payload.project_name }}
      run: .github/scripts/deploy-to-stage.sh
        
    - name: Update deployment status - Success
      if: success()
      env:
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      run: .github/scripts/update-status.sh success "${{ github.event.client_payload.deployment_id }}" "${{ github.sha }}"
          
    - name: Update deployment status - Failure
      if: failure()
      env:
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      run: .github/scripts/update-status.sh failure "${{ github.event.client_payload.deployment_id }}"
